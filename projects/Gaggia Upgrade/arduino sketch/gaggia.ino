static const unsigned char PROGMEM GAGGIA_PIC [] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xC3, 0x8B, 0x83, 0x88, 0x8F, 0x01, 0x70, 0x73, 0xC0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x04, 0xCC, 0x84, 0xC9, 0x11, 0x81, 0x88, 0x99, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x08, 0x48, 0x48, 0x4A, 0x00, 0x81, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x0F, 0xC8, 0x4F, 0xCE, 0x0F, 0x81, 0x09, 0xF9, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x08, 0x08, 0x48, 0x0A, 0x10, 0x81, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x04, 0x4C, 0xC4, 0x49, 0x11, 0x91, 0x08, 0x89, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xC3, 0x8B, 0x83, 0x88, 0x8E, 0x91, 0x08, 0x70, 0xC0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1F, 0xFE, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xE7, 0xF0, 0x07, 0xF0, 0xF0,
  0x00, 0x7F, 0xFE, 0x00, 0x7F, 0x00, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xE7, 0xF0, 0x07, 0xF8, 0xF0,
  0x00, 0xFF, 0xFE, 0x00, 0xFF, 0x80, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE7, 0xF0, 0x07, 0xF8, 0xF0,
  0x03, 0xFF, 0xFE, 0x00, 0xFF, 0x80, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE7, 0xF0, 0x0F, 0xF8, 0xF0,
  0x07, 0xFF, 0xFE, 0x00, 0xFF, 0x80, 0x3F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE7, 0xF0, 0x0F, 0xF8, 0x60,
  0x07, 0xFF, 0xFE, 0x00, 0xFF, 0x80, 0x7F, 0xFF, 0xF0, 0xFF, 0xFF, 0xE7, 0xF0, 0x0F, 0xFC, 0x00,
  0x0F, 0xFE, 0x00, 0x01, 0xFF, 0xC0, 0xFF, 0xE0, 0x00, 0xFF, 0xE0, 0x07, 0xF0, 0x0F, 0xFC, 0x00,
  0x1F, 0xF0, 0x00, 0x01, 0xFF, 0xC0, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x07, 0xF0, 0x1F, 0xFC, 0x00,
  0x1F, 0xE0, 0x00, 0x01, 0xFF, 0xC1, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xF0, 0x1F, 0xFC, 0x00,
  0x3F, 0xC0, 0x00, 0x01, 0xFF, 0xE1, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xF0, 0x1F, 0xFE, 0x00,
  0x3F, 0x80, 0x00, 0x03, 0xFF, 0xE3, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF0, 0x1F, 0xFE, 0x00,
  0x3F, 0x80, 0x00, 0x03, 0xFF, 0xE3, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x3F, 0xFE, 0x00,
  0x7F, 0x00, 0x00, 0x03, 0xFF, 0xE3, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x3F, 0xFF, 0x00,
  0x7F, 0x00, 0x00, 0x03, 0xFF, 0xF3, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x3F, 0xFF, 0x00,
  0x7F, 0x00, 0x00, 0x07, 0xFF, 0xF3, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x3F, 0xFF, 0x00,
  0x7F, 0x00, 0x3C, 0x07, 0xF7, 0xF3, 0xF0, 0x03, 0xE7, 0xF0, 0x07, 0xC7, 0xF0, 0x7F, 0x7F, 0x00,
  0x7F, 0x00, 0x7E, 0x07, 0xF7, 0xF3, 0xF8, 0x07, 0xF7, 0xF0, 0x0F, 0xE7, 0xF0, 0x7F, 0x3F, 0x80,
  0x7F, 0x00, 0x7E, 0x07, 0xE3, 0xFB, 0xF8, 0x07, 0xF7, 0xF0, 0x0F, 0xE7, 0xF0, 0x7F, 0x3F, 0x80,
  0x3F, 0x80, 0x7E, 0x0F, 0xE3, 0xFB, 0xF8, 0x07, 0xF7, 0xF0, 0x0F, 0xE7, 0xF0, 0xFF, 0x3F, 0x80,
  0x3F, 0x80, 0x7E, 0x0F, 0xFF, 0xFB, 0xFC, 0x07, 0xF3, 0xF8, 0x0F, 0xE7, 0xF0, 0xFF, 0xFF, 0x80,
  0x3F, 0xC0, 0x7E, 0x0F, 0xFF, 0xF9, 0xFC, 0x07, 0xF3, 0xF8, 0x0F, 0xE7, 0xF0, 0xFF, 0xFF, 0xC0,
  0x1F, 0xE0, 0x7E, 0x1F, 0xFF, 0xFD, 0xFE, 0x07, 0xF3, 0xFC, 0x0F, 0xE7, 0xF0, 0xFF, 0xFF, 0xC0,
  0x1F, 0xF0, 0x7E, 0x1F, 0xFF, 0xFD, 0xFF, 0x07, 0xF1, 0xFF, 0x0F, 0xE7, 0xF1, 0xFF, 0xFF, 0xC0,
  0x0F, 0xFC, 0xFE, 0x1F, 0xFF, 0xFC, 0xFF, 0xC7, 0xF1, 0xFF, 0xCF, 0xE7, 0xF1, 0xFF, 0xFF, 0xE0,
  0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x7F, 0xFF, 0xF0, 0xFF, 0xFF, 0xE7, 0xF1, 0xFF, 0xFF, 0xE0,
  0x07, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE7, 0xF1, 0xFF, 0xFF, 0xE0,
  0x03, 0xFF, 0xFE, 0x3F, 0x80, 0xFE, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE7, 0xF3, 0xF8, 0x0F, 0xE0,
  0x01, 0xFF, 0xFE, 0x3F, 0x80, 0xFE, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE7, 0xF3, 0xF8, 0x07, 0xF0,
  0x00, 0x7F, 0xFE, 0x3F, 0x80, 0x7F, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xE7, 0xF3, 0xF8, 0x07, 0xF0,
  0x00, 0x1F, 0xFE, 0x7F, 0x00, 0x7F, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xE7, 0xF3, 0xF8, 0x07, 0xF0,
  0x00, 0x03, 0xFE, 0x3F, 0x00, 0x7F, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xE7, 0xE3, 0xF0, 0x03, 0xF0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const short LED_HANDLING_INTERVAL = 20;
const short TEMP_READ_INTERVAL = 50;
const short PID_CALC_INTERVAL = 1;
const short SEND_HTTP_INTERVAL = 2000;

unsigned long lastLedHandling = 0;
unsigned long lastTempRead = 0;
unsigned long lastPidCalc = 0;
unsigned long lastSendHttp = 0;

void setup() {
  Serial.begin(9600);
  doInit();
}

void loop() {
  unsigned long now = millis();
  // -- execute led pulse
  if ((now - lastLedHandling) / LED_HANDLING_INTERVAL >= 1) {
    doLedHandling();
    lastLedHandling = millis();
  }
  // -- execute read temp
  if ((now - lastTempRead) / TEMP_READ_INTERVAL >= 1) {
    doReadTemp();
    lastTempRead = millis();
  }
  // -- execute pid calc
  if ((now - lastPidCalc) / PID_CALC_INTERVAL >= 1) {
    doCalcPid();
    lastPidCalc = millis();
  }
  // -- execute send http
  if ((now - lastSendHttp) / SEND_HTTP_INTERVAL >= 1) {
    doSendHttp();
    lastSendHttp = millis();
  }
}
